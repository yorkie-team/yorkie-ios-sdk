// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Source: yorkie/v1/yorkie.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// Yorkie is a service that provides an API for SDKs.
public protocol Yorkie_V1_YorkieServiceClientInterface: Sendable {

    @discardableResult
    func `activateClient`(request: Yorkie_V1_ActivateClientRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_ActivateClientResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `activateClient`(request: Yorkie_V1_ActivateClientRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_ActivateClientResponse>

    @discardableResult
    func `deactivateClient`(request: Yorkie_V1_DeactivateClientRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_DeactivateClientResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `deactivateClient`(request: Yorkie_V1_DeactivateClientRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_DeactivateClientResponse>

    @discardableResult
    func `attachDocument`(request: Yorkie_V1_AttachDocumentRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_AttachDocumentResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `attachDocument`(request: Yorkie_V1_AttachDocumentRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_AttachDocumentResponse>

    @discardableResult
    func `detachDocument`(request: Yorkie_V1_DetachDocumentRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_DetachDocumentResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `detachDocument`(request: Yorkie_V1_DetachDocumentRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_DetachDocumentResponse>

    @discardableResult
    func `removeDocument`(request: Yorkie_V1_RemoveDocumentRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_RemoveDocumentResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `removeDocument`(request: Yorkie_V1_RemoveDocumentRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_RemoveDocumentResponse>

    @discardableResult
    func `pushPullChanges`(request: Yorkie_V1_PushPullChangesRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_PushPullChangesResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `pushPullChanges`(request: Yorkie_V1_PushPullChangesRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_PushPullChangesResponse>

    func `watchDocument`(headers: Connect.Headers, onResult: @escaping @Sendable (Connect.StreamResult<Yorkie_V1_WatchDocumentResponse>) -> Void) -> any Connect.ServerOnlyStreamInterface<Yorkie_V1_WatchDocumentRequest>

    @available(iOS 13, *)
    func `watchDocument`(headers: Connect.Headers) -> any Connect.ServerOnlyAsyncStreamInterface<Yorkie_V1_WatchDocumentRequest, Yorkie_V1_WatchDocumentResponse>

    @discardableResult
    func `broadcast`(request: Yorkie_V1_BroadcastRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_BroadcastResponse>) -> Void) -> Connect.Cancelable

    @available(iOS 13, *)
    func `broadcast`(request: Yorkie_V1_BroadcastRequest, headers: Connect.Headers) async -> ResponseMessage<Yorkie_V1_BroadcastResponse>
}

/// Concrete implementation of `Yorkie_V1_YorkieServiceClientInterface`.
public final class Yorkie_V1_YorkieServiceClient: Yorkie_V1_YorkieServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @discardableResult
    public func `activateClient`(request: Yorkie_V1_ActivateClientRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_ActivateClientResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/ActivateClient", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `activateClient`(request: Yorkie_V1_ActivateClientRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_ActivateClientResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/ActivateClient", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `deactivateClient`(request: Yorkie_V1_DeactivateClientRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_DeactivateClientResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/DeactivateClient", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `deactivateClient`(request: Yorkie_V1_DeactivateClientRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_DeactivateClientResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/DeactivateClient", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `attachDocument`(request: Yorkie_V1_AttachDocumentRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_AttachDocumentResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/AttachDocument", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `attachDocument`(request: Yorkie_V1_AttachDocumentRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_AttachDocumentResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/AttachDocument", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `detachDocument`(request: Yorkie_V1_DetachDocumentRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_DetachDocumentResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/DetachDocument", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `detachDocument`(request: Yorkie_V1_DetachDocumentRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_DetachDocumentResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/DetachDocument", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `removeDocument`(request: Yorkie_V1_RemoveDocumentRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_RemoveDocumentResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/RemoveDocument", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `removeDocument`(request: Yorkie_V1_RemoveDocumentRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_RemoveDocumentResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/RemoveDocument", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `pushPullChanges`(request: Yorkie_V1_PushPullChangesRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_PushPullChangesResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/PushPullChanges", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `pushPullChanges`(request: Yorkie_V1_PushPullChangesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_PushPullChangesResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/PushPullChanges", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    public func `watchDocument`(headers: Connect.Headers = [:], onResult: @escaping @Sendable (Connect.StreamResult<Yorkie_V1_WatchDocumentResponse>) -> Void) -> any Connect.ServerOnlyStreamInterface<Yorkie_V1_WatchDocumentRequest> {
        return self.client.serverOnlyStream(path: "/yorkie.v1.YorkieService/WatchDocument", headers: headers, onResult: onResult)
    }

    @available(iOS 13, *)
    public func `watchDocument`(headers: Connect.Headers = [:]) -> any Connect.ServerOnlyAsyncStreamInterface<Yorkie_V1_WatchDocumentRequest, Yorkie_V1_WatchDocumentResponse> {
        return self.client.serverOnlyStream(path: "/yorkie.v1.YorkieService/WatchDocument", headers: headers)
    }

    @discardableResult
    public func `broadcast`(request: Yorkie_V1_BroadcastRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Yorkie_V1_BroadcastResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/yorkie.v1.YorkieService/Broadcast", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `broadcast`(request: Yorkie_V1_BroadcastRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Yorkie_V1_BroadcastResponse> {
        return await self.client.unary(path: "/yorkie.v1.YorkieService/Broadcast", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let activateClient = Connect.MethodSpec(name: "ActivateClient", service: "yorkie.v1.YorkieService", type: .unary)
            public static let deactivateClient = Connect.MethodSpec(name: "DeactivateClient", service: "yorkie.v1.YorkieService", type: .unary)
            public static let attachDocument = Connect.MethodSpec(name: "AttachDocument", service: "yorkie.v1.YorkieService", type: .unary)
            public static let detachDocument = Connect.MethodSpec(name: "DetachDocument", service: "yorkie.v1.YorkieService", type: .unary)
            public static let removeDocument = Connect.MethodSpec(name: "RemoveDocument", service: "yorkie.v1.YorkieService", type: .unary)
            public static let pushPullChanges = Connect.MethodSpec(name: "PushPullChanges", service: "yorkie.v1.YorkieService", type: .unary)
            public static let watchDocument = Connect.MethodSpec(name: "WatchDocument", service: "yorkie.v1.YorkieService", type: .serverStream)
            public static let broadcast = Connect.MethodSpec(name: "Broadcast", service: "yorkie.v1.YorkieService", type: .unary)
        }
    }
}
